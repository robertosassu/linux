# Copyright (c) 2021 Petr Vorel <pvorel@suse.cz>
name: "distros"
on:
  push:
    tags:
      - '**'

jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UNRELEASED: update
          DRAFT_RELEASE: false
          PRE_RELEASE: false
          RELEASE_NAME: ${GITHUB_REF#refs/tags/}

  job:
    runs-on: ubuntu-latest
    needs: once

    strategy:
      fail-fast: false
      matrix:
        include:
          # 32bit build
          - container: "debian:stable"
            env:
              CC: gcc
              ARCH: i386
              ARCH_SUFFIX: .i386
              VARIANT: i386

          # musl (native)
          - container: "alpine:latest"
            env:
              CC: gcc

          - container: "opensuse/tumbleweed"
            env:
              CC: gcc

          - container: "opensuse/leap"
            env:
              CC: gcc

          - container: "ubuntu:groovy"
            env:
              CC: gcc

          - container: "ubuntu:xenial"
            env:
              CC: gcc

          - container: "fedora:latest"
            env:
              CC: gcc

          - container: "centos:7"
            env:
              CC: gcc
              DEVTOOLSET: yes

          - container: "centos:latest"
            env:
              CC: gcc

          - container: "debian:testing"
            env:
              CC: gcc

          - container: "debian:stable"
            env:
              CC: gcc

          - container: "alt:sisyphus"
            env:
              CC: gcc

    container:
      image: ${{ matrix.container }}
      env: ${{ matrix.env }}

    steps:
    - name: Show OS
      run: cat /etc/os-release

    - name: Install tar
      run: zypper --non-interactive install --force-resolution --no-recommends tar gzip
      if: startsWith(matrix.container, 'opensuse')

    - name: Git checkout
      uses: actions/checkout@v2

    - name: Cache git
      uses: actions/cache@v1.1.0
      with:
        path: .git/
        key: ${{ hashFiles('**') }}

    - name: Install additional packages
      run: |
        INSTALL=${{ matrix.container }}
        INSTALL="${INSTALL%%:*}"
        INSTALL="${INSTALL%%/*}"
        if [ "$VARIANT" ]; then ARCH="$ARCH" ./ci/$INSTALL.$VARIANT.sh; fi
        ARCH="$ARCH" CC="$CC" ./ci/$INSTALL.sh

    - name: Compile
      run: |
        if [ "$DEVTOOLSET" = "yes" ]; then
                source /opt/rh/devtoolset-10/enable
        fi
        if [ "$ARCH" = "i386" ]; then
                CROSS_COMPILE_OPT="CROSS_COMPILE=i686-linux-gnu-"
        fi
        $CMDPREFIX make ARCH=um $CROSS_COMPILE_OPT -j$(nproc)

    - name: Upload kernel binary
      id: upload-kernel-binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: linux
        asset_name: linux-${{ matrix.container }}${{ matrix.container.env.ARCH_SUFFIX }}
        asset_content_type: application/x-binary

    - name: Upload signing key
      id: upload-signing-key
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: certs/signing_key.pem
        asset_name: signing_key.pem-${{ matrix.container }}${{ matrix.container.env.ARCH_SUFFIX }}
        asset_content_type: application/x-pem-file
