# Copyright (c) 2021 Petr Vorel <pvorel@suse.cz>
name: "distros"
on:
  push:
    tags:
      - '**'

jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}-test
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

  job:
    runs-on: ubuntu-latest
    needs: once
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        include:
          # 32bit build
          - container: "debian:stable"
            env:
              CC: gcc
              ARCH: i386
              VARIANT: i386

          # musl (native)
          - container: "alpine:latest"
            env:
              CC: gcc

          - container: "opensuse/tumbleweed"
            env:
              CC: gcc

          - container: "opensuse/leap"
            env:
              CC: gcc

          - container: "ubuntu:groovy"
            env:
              CC: gcc

          - container: "ubuntu:xenial"
            env:
              CC: gcc

          - container: "fedora:latest"
            env:
              CC: gcc

          - container: "centos:7"
            env:
              CC: gcc

          - container: "centos:latest"
            env:
              CC: gcc

          - container: "debian:testing"
            env:
              CC: gcc

          - container: "debian:stable"
            env:
              CC: gcc

          - container: "alt:sisyphus"
            env:
              CC: gcc

    container:
      image: ${{ matrix.container }}
      env: ${{ matrix.env }}

    steps:
    - name: Show OS
      run: cat /etc/os-release


    - name: Git checkout
      uses: actions/checkout@v2


    - name: Cache git
      uses: actions/cache@v1.1.0
      with:
        path: .git/
        key: ${{ hashFiles('**') }}

    - name: Install additional packages
      run: |
        INSTALL=${{ matrix.container }}
        INSTALL="${INSTALL%%:*}"
        INSTALL="${INSTALL%%/*}"
        if [ "$VARIANT" ]; then ARCH="$ARCH" ./ci/$INSTALL.$VARIANT.sh; fi
        ARCH="$ARCH" CC="$CC" TSS="$TSS" ./ci/$INSTALL.sh

    - name: Compiler version
      run: $CC --version

    - name: Compile
      run: make ARCH=um -j$(nproc)

    - name: Upload kernel binary
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: linux
        asset_name: linux-${{ matrix.container }}
        asset_content_type: application/x-binary

  last:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: [job, once]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Upload signing key
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/certs/signing_key.pem
          asset_name: signing_key.pem
          asset_content_type: application/x-pem-file
